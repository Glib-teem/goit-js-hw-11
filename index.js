import{a as d,S as p,i as c}from"./assets/vendor-Dy2ZTtfi.js";(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))e(r);new MutationObserver(r=>{for(const t of r)if(t.type==="childList")for(const i of t.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&e(i)}).observe(document,{childList:!0,subtree:!0});function a(r){const t={};return r.integrity&&(t.integrity=r.integrity),r.referrerPolicy&&(t.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?t.credentials="include":r.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function e(r){if(r.ep)return;r.ep=!0;const t=a(r);fetch(r.href,t)}})();const h="VITE_PIXABAY_API_KEY=51358169-fa0c0ba6de1b0bb5150f64058",y="https://pixabay.com/api/";async function g(o){var a;if(!o||o.trim()==="")throw new Error("Search query cannot be empty");const s={key:h,q:o.trim(),image_type:"photo",orientation:"horizontal",safesearch:"true",per_page:40};try{const e=await d.get(y,{params:s});if(!e.data||!Array.isArray(e.data.hits))throw new Error("Invalid response from Pixabay API");return e.data}catch(e){if(e.response){const r=e.response.status,t=((a=e.response.data)==null?void 0:a.error)||e.message;switch(r){case 400:throw new Error("Invalid search parameters");case 403:throw new Error("Invalid API key or access denied");case 429:throw new Error("Rate limit exceeded. Please try again later");default:throw new Error(`Pixabay API error: ${r} - ${t}`)}}else throw e.request?new Error("Network error: Unable to connect to Pixabay API"):new Error(`Error: ${e.message}`)}}const u=document.querySelector(".gallery"),l=document.querySelector(".loader");u||console.error('Gallery element not found! Make sure you have element with class "gallery"');l||console.error('Loader element not found! Make sure you have element with class "loader"');const w=new p(".gallery a",{captionsData:"alt",captionDelay:250});function b(o){if(!Array.isArray(o)||o.length===0){console.warn("No images to display");return}const s=o.map(({webformatURL:a,largeImageURL:e,tags:r,likes:t,views:i,comments:f,downloads:m})=>`
      <li class="gallery-item">
        <a href="${e}">
          <img src="${a}" alt="${r}" class="gallery-image" loading="lazy">
        </a>
        <div class="info">
          <p class="info-item"><b>Likes:</b> ${t}</p>
          <p class="info-item"><b>Views:</b> ${i}</p>
          <p class="info-item"><b>Comments:</b> ${f}</p>
          <p class="info-item"><b>Downloads:</b> ${m}</p>
        </div>
      </li>`).join("");u.insertAdjacentHTML("beforeend",s),w.refresh()}function E(){u&&(u.innerHTML="")}function I(){l&&l.classList.remove("is-hidden")}function L(){l&&l.classList.add("is-hidden")}const n=document.querySelector(".form");n||console.error('Form element not found! Make sure you have form with class "form"');c.settings({timeout:5e3,resetOnHover:!0,icon:"material-icons",transitionIn:"flipInX",transitionOut:"flipOutX"});n==null||n.addEventListener("submit",async o=>{o.preventDefault();const s=n.elements["search-text"];if(!s){console.error('Search input not found! Make sure input has name="search-text"');return}const a=s.value.trim();if(!a){c.warning({title:"Warning",message:"Search input must not be empty!",position:"topRight"});return}E(),I();try{const e=await g(a);e.hits.length===0?c.error({title:"No Results",message:"Sorry, there are no images matching your search query. Please try again!",position:"topRight"}):(b(e.hits),c.success({title:"Success",message:`Found ${e.totalHits} images`,position:"topRight"}))}catch(e){console.error("Search error:",e),c.error({title:"Error",message:`Something went wrong: ${e.message}`,position:"topRight"})}finally{L(),n.reset()}});
//# sourceMappingURL=index.js.map
